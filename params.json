{"name":"Mt-module","tagline":"Basic require/module.exports style module loader","body":"# MT-Module\r\n\r\nThis is a (currently very basic) Module loader for Client-Side Javascript.\r\n\r\nIt allows you to use the Commonjs/NodeJS style \"require()\" to handle dependencies in your client-side projects without having to compile anything.\r\n\r\nUsage is pretty simple: Just include it in your HTML-File and point it towards your Entry-JS-File like this:\r\n\r\n    <script src=\"mt-module.js\" entry=\"/my-init-file.js\"></script>\r\n    <script src=\"mt-module.js\" debug=\"true\" entry=\"/my-init-file.js\" waitForDom=\"true\" ></script>\r\n\r\nYou can also use the script attributes to provide additional information for MT-Module. The currently supported attributes are:\r\n* debug: Will print debug messages in case you run into trouble. Defaults to \"false\".\r\n* waitForDom: Will defer the execution until window.onload. Defaults to \"true\".\r\n\r\n\r\nYou can then use the commonly known \"require()\", \"module\" and \"exports\"/\"module.exports\" in your Project. All \"require\"'d Module identifiers are URIs relative to the projects root. \r\n\r\n    var one = require(\"/js/myFirstDependency.js\");\r\n    module.exports = {thisIs: \"great\"};\r\n\r\nPlans for MT-Module:\r\n* Change the module identifiers to be identical to the [CommonJS Module Specification](http://wiki.commonjs.org/wiki/Modules/1.1.1).\r\n* Allow for asynchronous loading of the dependencies.\r\n* Improve the current (basic) tests.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}